plugins {
    // Core plugins
    id 'java'
    id 'jacoco'
    // Apply these to subprojects only
    id 'org.springframework.boot' version '3.1.5' apply false
    id 'io.spring.dependency-management' version '1.1.3' apply false
    id 'org.liquibase.gradle' version '2.2.0' apply false
}

java {
    toolchain {
        // Gradle 9 requires you to use toolchains for JVM targeting
        languageVersion = JavaLanguageVersion.of(17)
    }
}

allprojects {
    group = 'com.enterprise'
    version = '0.0.1-SNAPSHOT'

    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'jacoco'

    // Dependencies
    dependencies {
        // Spring Boot starers (managed by Spring Boot BOM)
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-security'

        // Database
        runtimeOnly 'org.postgresql:postgresql:42.6.0'
        implementation 'org.liquibase:liquibase-core:4.23.2'

        // Lombok & MapStruct
        compileOnly 'org.projectlombok:lombok:1.18.30'
        annotationProcessor 'org.projectlombok:lombok:1.18.30'
        implementation 'org.mapstruct:mapstruct:1.5.5.Final'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

        // OpenAPI UI
        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

        // Testing
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.springframework.security:spring-security-test'
        testImplementation 'org.testcontainers:postgresql:1.19.1'
    }

    // Ensure tests use JUnit Platform and generate JaCoCo coverage
    tasks.named('test', Test) {
        useJUnitPlatform()
        finalizedBy(tasks.named('jacocoTestReport'))
    }

    tasks.named('jacocoTestReport', JacocoReport) {
        dependsOn(tasks.named('test'))
        reports {
            xml.required.set(true)
            html.required.set(true)
        }
    }
}
